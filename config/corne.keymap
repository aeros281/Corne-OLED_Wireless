/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv { acceleration-exponent = <2>; };

&lt { flavor = "balanced"; };

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <6 18 30 39 40 41 31 19 7 8 20 32 33 21 9 10 22 34 35 23 11>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <100>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <100>;
        };

        layer_mt: layer_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MT";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        lt_prefer_tap: lt_prefer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_PREFER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-while-undecided;
        };

        lt_prefer_hold: lt_prefer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_PREFER_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_vim_save {
            bindings = <&macro_vim_save>;
            key-positions = <1 2>;
            layers = <0 1>;
        };

        combo_vim_quit {
            bindings = <&macro_vim_quit>;
            key-positions = <0 1>;
            layers = <0 1>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <18 19>;
            require-prior-idle-ms = <125>;
            layers = <0 1>;
        };

        combo_win_copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
            layers = <0>;
        };

        combo_win_paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
            layers = <0>;
        };

        combo_mac_copy {
            bindings = <&kp LG(C)>;
            key-positions = <27 28>;
            layers = <1>;
        };

        combo_mac_paste {
            bindings = <&kp LG(V)>;
            key-positions = <28 29>;
            layers = <1>;
        };

        combo_cap_words {
            bindings = <&caps_word>;
            key-positions = <24 25>;
            layers = <0 1>;
        };
    };

    macros {
        macro_git_amend: git_amend {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp MINUS &kp A &kp M &kp E &kp N &kp D &kp SPACE &kp MINUS &kp MINUS &kp N &kp O &kp MINUS &kp E &kp D &kp I &kp T>;
            label = "GIT_AMEND";
            tap-ms = <10>;
            wait-ms = <10>;
        };

        macro_vim_save: macro_vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp COLON &kp W &kp RET>;
            label = "MACRO_VIM_SAVE";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        macro_vim_quit: macro_vim_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp COLON &kp Q &kp RET>;
            label = "MACRO_VIM_QUIT";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        macro_tmux_switch: macro_tmux_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(B) &kp Q>;
            label = "MACRO_TMUX_SWITCH";
        };

        macro_alt_tab: macro_alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LEFT_ALT &kp TAB>,
                <&macro_release>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_ALT_TAB";
        };

        tmux: tmux {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&none &kp LC(B) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TMUX";
        };

        macro_vim_clipboard: macro_vim_register {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DOUBLE_QUOTES &kp PLUS>;
            label = "MACRO_VIM_REGISTER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q        &kp W            &kp E           &kp R              &kp T                          &kp Y                   &kp U          &kp I         &kp O            &kp P           &kp MINUS
&mt LCTRL ESCAPE  &hml LCMD A  &hml LEFT_ALT S  &hml LCTRL D    &hml LEFT_SHIFT F  &kp G                          &kp H                   &hmr LSHIFT J  &hmr LCTRL K  &hmr LEFT_ALT L  &hmr LCMD SEMI  &kp SQT
&kp LSHFT         &kp Z        &kp X            &kp C           &kp V              &kp B                          &kp N                   &kp M          &kp COMMA     &kp DOT          &kp FSLH        &layer_mt RIGHT_SHIFT 1
                                                &lt 6 LEFT_ALT  &lt 5 ENTER        &lt_prefer_hold 2 BACKSPACE    &lt_prefer_tap 3 SPACE  &mo 9          &lt 7 LCMD
            >;
        };

        mac {
            bindings = <
&trans           &trans  &trans  &trans  &trans  &trans    &trans       &trans  &trans  &trans  &trans  &trans
&mt LCMD ESCAPE  &trans  &trans  &trans  &trans  &trans    &trans       &trans  &trans  &trans  &trans  &trans
&trans           &trans  &trans  &trans  &trans  &trans    &trans       &trans  &trans  &trans  &trans  &layer_mt LEFT_SHIFT 0
                                 &mo 6   &trans  &trans    &lt 4 SPACE  &trans  &mo 7
            >;
        };

        numsym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp N1           &kp N2         &kp N3         &kp N4            &kp N5          &kp N6     &kp N7                &kp N8                 &kp N9          &kp N0                &kp UNDERSCORE
&trans     &kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR        &kp PERCENT     &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE
&trans     &kp CARET        &kp AMPERSAND  &kp LESS_THAN  &kp GREATER_THAN  &kp ASTERISK    &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE       &kp NON_US_BACKSLASH  &kp GRAVE
                                           &kp LGUI       &mo 5             &kp SPACE       &kp RET    &trans                &kp RALT
            >;
        };

        up_win {
            bindings = <
&kp LS(LA(LC(LG(TAB))))  &kp LA(F4)            &kp LC(LS(TAB))  &kp LC(LS(A))   &kp LC(TAB)  &kp LG(TAB)          &kp PG_UP      &kp LC(LEFT_ARROW)  &kp UP_ARROW  &kp LC(RIGHT)  &trans  &kp DELETE
&kp LS(LCMD)             &sk LCMD              &sk LEFT_ALT     &sk LCTRL       &sk LSHIFT   &kp CLCK             &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN      &kp RIGHT      &trans  &trans
&kp LC(ESCAPE)           &macro_vim_clipboard  &trans           &kp LC(C)       &kp LC(V)    &kp LC(X)            &trans         &kp HOME            &trans        &kp END        &trans  &trans
                                                                &macro_alt_tab  &caps_word   &kp LC(BACKSPACE)    &trans         &trans              &trans
            >;
        };

        up_mac {
            bindings = <
&kp LA(TAB)       &kp LG(Q)  &kp LC(LS(TAB))  &kp LG(LS(A))  &kp LC(TAB)  &kp LC(UP_ARROW)     &kp PG_UP      &kp LA(LEFT_ARROW)  &kp UP_ARROW  &kp LA(RIGHT)  &trans  &trans
&kp LA(LC(LCMD))  &sk LCMD   &sk LEFT_ALT     &sk LCTRL      &sk LSHIFT   &kp CAPS             &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN      &kp RIGHT      &trans  &trans
&trans            &trans     &trans           &kp LG(C)      &kp LG(V)    &kp LG(X)            &trans         &kp LG(LEFT_ARROW)  &trans        &kp LG(RIGHT)  &trans  &trans
                                              &trans         &caps_word   &kp LA(BACKSPACE)    &trans         &trans              &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans    &trans        &trans            &trans          &trans    &msc SCRL_UP    &to 0           &mmv MOVE_UP    &to 1            &trans    &trans
&trans  &kp LCMD  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB1  &mkp MB2
&trans  &trans    &trans        &trans            &trans          &trans    &trans          &trans          &trans          &trans           &trans    &trans
                                &trans            &trans          &trans    &trans          &trans          &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans    &trans        &trans     &trans      &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &sk LCMD  &sk LEFT_ALT  &sk LCTRL  &sk LSHIFT  &trans    &trans  &kp F4  &kp F5  &kp F6  &trans   &kp F12
&trans  &trans    &trans        &trans     &trans      &trans    &trans  &kp F1  &kp F2  &kp F3  &trans   &trans
                                &trans     &trans      &trans    &trans  &trans  &trans
            >;
        };

        macros {
            bindings = <
&trans     &macro_tmux_switch  &macro_vim_save  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &macro_git_amend    &trans           &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LC(B)  &trans              &trans           &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        sys {
            bindings = <
&bt BT_CLR_ALL  &kp N1        &kp N2        &kp N3        &kp N4        &sys_reset      &sys_reset  &to 0     &kp N8    &to 1      &kp N0  &kp BSPC
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT       &trans        &trans        &trans        &trans        &trans          &trans      &trans    &trans    &trans     &trans  &trans
                                            &kp LGUI      &trans        &kp SPACE       &kp RET     &trans    &kp RALT
            >;
        };

        tmux {
            bindings = <
&tmux N    &tmux Q  &tmux W  &tmux E         &kp R                &kp T             &kp Y          &kp U   &kp I    &tmux O  &tmux RIGHT_BRACKET  &tmux LEFT_BRACKET
&trans     &kp A    &tmux S  &tmux D         &tmux F              &kp G             &tmux PERCENT  &kp J   &kp K    &kp L    &tmux SEMICOLON      &tmux COLON
&kp LC(B)  &kp Z    &kp X    &kp C           &tmux DOUBLE_QUOTES  &kp B             &tmux DOLLAR   &kp M   &tmux P  &tmux N  &kp FSLH             &trans
                             &tmux NUMBER_3  &tmux NUMBER_2       &tmux NUMBER_1    &trans         &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        to_sys {
            if-layers = <6 7>;
            then-layer = <8>;
        };
    };
};
